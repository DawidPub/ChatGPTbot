Jasne — już wyjaśniam, o co chodzi z tymi "potrzebami" w tabeli z rekomendacjami.
W kontekście Pydantic AI i jego alternatyw, każda z tych bibliotek lub narzędzi odpowiada na nieco inny typ zadania, które możesz mieć w pracy z LLM (np. GPT-4, Claude, Mistral). Poniżej opisuję każdą z tych potrzeb w praktyce, czyli do czego możesz chcieć użyć takiej biblioteki, i która się wtedy najbardziej nadaje:
🔄 „Prompt → Model Pydantic”
Co to znaczy?
Masz luźną wiadomość od użytkownika (np. e-mail, polecenie głosowe, prompt), i chcesz z niej automatycznie wygenerować wypełniony obiekt Pydantic.
Przykład:
„Zarezerwuj hotel w Krakowie na 3 noce od 10 sierpnia”
→ chcesz dostać obiekt Booking(city="Kraków", nights=3, start_date="2025-08-10")
Najlepsze narzędzia:
✅ Pydantic AI
✅ Instructor
⛔️ Guardrails – da się, ale bardziej złożone w konfiguracji
✅ Walidacja struktury LLM-outputu
Co to znaczy?
Masz już odpowiedź od LLM (np. JSON z ChatGPT) i chcesz upewnić się, że pasuje do schematu (np. typy się zgadzają, są wszystkie pola itd.).
Przykład:
Twój LLM wygenerował JSON, ale nie jesteś pewien, czy nie brakuje np. "email" albo "quantity" to nie tekst.
Najlepsze narzędzia:
✅ Guardrails AI
✅ Outlines
✅ ReLLM
🧠 Open Source + lokalne LLM
Co to znaczy?
Nie używasz OpenAI ani Claude, tylko lokalne modele (np. Mistral, Llama 3, Mixtral), i chcesz mieć podobne możliwości walidacji i strukturyzacji danych jak w OpenAI.
Najlepsze narzędzia:
✅ Outlines
✅ ReLLM
✅ LMQL
⛔️ Instructor – tylko OpenAI
⚙️ Produkcja + retry + fallback
Co to znaczy?
Używasz LLM w produkcyjnej aplikacji i chcesz mieć automatyczny retry, jeśli LLM zwróci błędny JSON. Chcesz też np. fallback na inną metodę (np. własne parsowanie).
Przykład:
Jeśli quantity="pięć" zamiast 5, to chcesz:
Spróbować poprawić,
Albo zgłosić błąd,
Albo użyć defaultów.
Najlepsze narzędzia:
✅ ReLLM
✅ Guardrails AI
✅ LMQL
🧾 Dokumenty, PDF, HTML
Co to znaczy?
Chcesz wyciągać dane z dokumentów tekstowych (np. faktura PDF, opis produktu, strona HTML), nie z promptu.
Najlepsze narzędzia:
✅ Parsel
✅ Unstructured.io
Chcesz, żebym dorzucił do tego mapę decyzyjną w stylu „Jeśli... to wybierz…” albo pełną tabelę porównawczą z wszystkimi cechami (Open Source, wsparcie LLM, walidacja, retry, itp.)?